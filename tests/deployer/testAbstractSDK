#
# Nimbella CONFIDENTIAL
# ---------------------
#
#   2018 - present Nimbella Corp
#   All Rights Reserved.
#
# NOTICE:
#
# All information contained herein is, and remains the property of
# Nimbella Corp and its suppliers, if any.  The intellectual and technical
# concepts contained herein are proprietary to Nimbella Corp and its
# suppliers and may be covered by U.S. and Foreign Patents, patents
# in process, and are protected by trade secret or copyright law.
#
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from Nimbella Corp.
#

# Test the new abstract forms of the nodejs SDK
# This is not slated to be added to runAutomated.
# Instead, when we have coverage of our existing SDKs (e.g. adding php and python), we should move the tests into
# main/tests/data-bucket (which this test is based on).

# When the environment variable S3 is non-empty, the test assumes the storage provider is S3.
# Otherwise, it assumes GCS.   On GCS, the test tests both the legacy storage() handle and the 
# new storageClient() handle.  On S3, only the new handle can be tested.

SELFDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $SELFDIR

set -e
PROJECT=$(jq -r .current ../../../main/config/nimconfig.json)
TAG=${PROJECT:3}
NAMESPACE=$(nim auth current --name)
BUCKET="gs://data-$NAMESPACE-api$TAG-nimbella-io"
if [ -n "$S3" ]; then
	BUCKET="s3://data-$NAMESPACE-nimbella-io"
fi

echo "Using bucket $BUCKET"

# Subroutine to test one of the actions
function tryit {
  action="$1"
  file="test-$1.txt"

  RESPONSE=$(nim action invoke data-bucket/$action -p filename $file)
  BODY=$(echo "$RESPONSE" | jq -r .body)
  if [ "$BODY" != ok ]; then
	  echo "Unexpected response from '$action' action:"
	  echo "$RESPONSE"
	  exit 1
  fi

  if [ -n "$S3" ]; then
    TEST=$(gsutil cat "$BUCKET"/"$file")
  else
    TEST=$(aws s3 cp "$BUCKET"/"$file" /dev/stdout --quiet)
  fi
  if [ "$TEST" != "Expected $file contents" ]; then
	  echo "Contents returned by utility copying from the bucket were unexpectedly '$TEST'"
    exit 1
  fi

  echo "Successful test: $action"
}

# Ensure that the test project area is clean
pushd abstractSDK
git clean -fdX
popd

# Deploy the project
nim project deploy abstractSDK

# Test the result when using the legacy form of the SDK if not on S3
if [ -z "$S3" ]; then
	 tryit testOld
fi

# Test again using the newer form
tryit testNew

echo "Test succeeded"
