#
# Nimbella CONFIDENTIAL
# ---------------------
#
#   2018 - present Nimbella Corp
#   All Rights Reserved.
#
# NOTICE:
#
# All information contained herein is, and remains the property of
# Nimbella Corp and its suppliers, if any.  The intellectual and technical
# concepts contained herein are proprietary to Nimbella Corp and its
# suppliers and may be covered by U.S. and Foreign Patents, patents
# in process, and are protected by trade secret or copyright law.
#
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from Nimbella Corp.
#

# This tests the feature whereby an 'environment' clause of project.yml
# translates to 'parameters' with init=true
# It also tests the ability to place environment and parameters on a package or the project as a whole

SELFDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd $SELFDIR
set -e

nim project deploy splitParams
rm -f parameters
nim action get user/authorize | jq '.parameters' > parameters

T=$(cat parameters | jq 'map(select(.key == "e1"))[0]')
VALUE=$(echo "$T" | jq -r .value)
test "$VALUE" != "eone" && echo "e1.value is not 'eone'" && exit 1  
INIT=$(echo "$T" | jq -r .init)
test "$INIT" != "true" && echo "e1.init is not true" && exit 1  

T=$(cat parameters | jq 'map(select(.key == "p1"))[0]')
VALUE=$(echo "$T" | jq -r .value)
test "$VALUE" != "pone" && echo "p1.value is not 'pone'" && exit 1  
INIT=$(echo "$T" | jq -r .init)
test "$INIT" != "null" && echo "p1.init is not null" && exit 1  

T=$(cat parameters | jq 'map(select(.key == "e2"))[0]')
VALUE=$(echo "$T" | jq -r .value)
test "$VALUE" != "etwo" && echo "e2.value is not 'etwo'" && exit 1  
INIT=$(echo "$T" | jq -r .init)
test "$INIT" != "true" && echo "e2.init is not true" && exit 1  

T=$(cat parameters | jq 'map(select(.key == "p2"))[0]')
VALUE=$(echo "$T" | jq -r .value)
test "$VALUE" != "ptwo" && echo "p2.value is not 'ptwo'" && exit 1  
INIT=$(echo "$T" | jq -r .init)
test "$INIT" != "null" && echo "p2.init is not null" && exit 1  

T=$(cat parameters | jq 'map(select(.key == "e3"))[0]')
VALUE=$(echo "$T" | jq -r .value)
test "$VALUE" != "ethree" && echo "e3.value is not 'ethree'" && exit 1  
INIT=$(echo "$T" | jq -r .init)
test "$INIT" != "true" && echo "e3.init is not true" && exit 1  

T=$(cat parameters | jq 'map(select(.key == "p3"))[0]')
VALUE=$(echo "$T" | jq -r .value)
test "$VALUE" != "pthree" && echo "p3.value is not 'pthree'" && exit 1  
INIT=$(echo "$T" | jq -r .init)
test "$INIT" != "null" && echo "p3.init is not null" && exit 1  

rm -f parameters
echo "Test Succeeded"
