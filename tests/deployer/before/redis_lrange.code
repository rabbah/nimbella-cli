/*
 * Nimbella CONFIDENTIAL
 * ---------------------
 *
 *   2018 - present Nimbella Corp
 *   All Rights Reserved.
 *
 * NOTICE:
 *
 * All information contained herein is, and remains the property of
 * Nimbella Corp and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Nimbella Corp and its
 * suppliers and may be covered by U.S. and Foreign Patents, patents
 * in process, and are protected by trade secret or copyright law.
 *
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Nimbella Corp.
 */

var nim = require('nim')

function main({key, start, stop}) {
    if (!key || !Number.isInteger(start) || !Number.isInteger(stop)) {
        return { payload: 'Please specify a non-empty key, start, and stop' }
    }
    var redis = nim.redis()
    return redis
      .lrangeAsync(key, start, stop)
      .then(reply => { return { payload: reply }})
      .catch(err =>  { return { payload: 'Error retrieving value for key ' + key }})
}

